<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Technologies|Mobile Technologies|Mobile How Tos|Use Tegra Android Samples Pack">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Running the Samples</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../resources/stylesheets/style.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.button.previous-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-previous.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.button.current-topic-index-button
{
	-pie-background: linear-gradient(#ffffff, #ececec);
}

.button.next-topic-button
{
	-pie-background: url('../../../Skins/Default/Stylesheets/Images/navigate-next.png') no-repeat center center, linear-gradient(#ffffff, #ececec);
}

.needs-pie
{
	behavior: url('../../../Resources/Scripts/PIE.htc');
}

</style>
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../../Skins/Default/Scripts/Toolbar.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../index.html#technologies/mobile/tegra_android_samples_run_samples.htm">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox_style.css_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../technologies_aw.htm">Technologies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../mobile_technologies.htm">Mobile Technologies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="how_to_header.htm">Mobile How Tos</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Running the Samples</span>
        </div>
        <p style="font-size: 8pt;">To view the latest NVIDIA&#160;AndroidWorks documentation, visit <a href="http://docs.nvidia.com/gameworks/index.html" target="_blank">http://docs.nvidia.com/gameworks/index.html</a>. </p><a name="kanchor85"></a>
        <h2><span class="SystemTitle">Running the Samples</span>
        </h2>
        <hr width="100%" size="0" align="center" />
        <h4>Sample Apps</h4>
        <p>The sample apps are both specifically designed and written to show good Android Activity lifecycle behavior.  This is, in fact, the specific focus of these applications.</p>
        <h5>native_globe</h5>
        <p>The <code>globe</code> application is a 3D graphics intensive application that shows common idioms for high performance application development, such as:</p>
        <ul>
            <li value="1">Android application lifecycle behavior</li>
            <li value="2">Audio playback</li>
            <li value="3">Index and vertex buffer object use</li>
        </ul>
        <p>Many more details on this sample are provided in the aforementioned guide, <a href="globe_intro_main.htm">Sample:&#160;Tegra Android Native Globe Application</a>, which is included in this Samples Pack.  Please refer to this manual for more information on the Globe application.</p>
        <h5>native_basic</h5>
        <p>The <code>native_basic</code> is a much simpler application than Globe; it handles most of the same application lifecycle cases, but its overall UI flow is much simpler than Globe, with only a “running” and an “auto-paused” mode.  It is the basis for most of the feature demos.  It is also the application that is generated by a call to the <code>app_create</code> tool using the basic template.</p>
        <h4>Feature Demos</h4>
        <p>The feature demos are designed to be small applications that demonstrate a particular Android, game development, or Tegra feature in isolation.  These applications tend to be small, and may or may not be 100% compliant to Android application lifecycle (although the intention is that most should behave well).  There are several categories of these demos, each grouped under a topic heading.</p>
        <h4>Android Feature Demos</h4>
        <h5>dynamic_resolution</h5>
        <table>
            <col />
            <col style="width: 660px;" />
            <tbody>
                <tr>
                    <td style="background-color: #ffffe0;vertical-align: middle;">
                        <img src="images/notebox.png" />
                    </td>
                    <td style="background-color: #ffffe0;vertical-align: middle;"><b>Note:</b> The <code>dynamic_resolution</code> sample should be considered a pre-release sample.  The application is slated to be updated to move the native window buffer resizing code into the EGL support library for cleaner application lifecycle support.  The current sample is designed to allow developers to start their basic coding of the feature in the immediate term.
                    </td>
                </tr>
            </tbody>
        </table>
        <p>The dynamic resolution sample shows how an application can use Framebuffer Objects (FBOs) or Android native window functions to create a 3D target rendering surface that is smaller than the native screen size.  This allows an application to decouple its rendering resolution from rising screen densities while still rendering to the full screen.</p>
        <h5>native_subclass</h5>
        <p>The native subclass sample is designed to show that while developers can create applications on Android using only native code, they can still make use of Android Java-only features simply by subclassing <code>NativeActivity</code> and adding the code they need to for the specific feature.  The demo uses the Android menu button to trigger one of a pair of JNI calls from native up to Java member methods in a subclass of <code>NativeActivity</code>.  These Java calls show an Android UI “toast” notification or launch a browser window to a URL.  The JNI in this case is extremely simple, leveraging more Java code up in the subclassed activity.  It is also possible via this subclassed Java to post work to the UI thread (since <code>native_app_glue</code> runs in a secondary thread) and to use Android UI.  This sample also forms the basis of the app create script’s subclass template.</p>
        <h5>simple_jni</h5>
        <p>The simple JNI sample shows how to access some basic Java classes and method purely from native code.  This includes querying class APIs, creating Java class object, invoking methods and convert C strings to JNI strings.  The result is that the Android menu button in this app causes JNI to launch an Android web browser to the NVIDIA developer site.</p>
        <h4>Input Device Demos</h4>
        <h5>native_accelerometer</h5>
        <p>The native accelerometer shows several important sensor-related behaviors allowing the app to natively match the current device orientation while showing the current values of the accelerometer sensor visually:</p>
        <ul>
            <li value="1">How to set up a sensor such as accelerometer and attach it to the <code>native_app_glue</code> event queue.</li>
            <li value="2">How and when to disconnect and shut down sensors when the application is not focused, to avoid spamming the event queue and wasting power.</li>
            <li value="3">How to transform the incoming “device space” accelerometer events into the current application rendering space, even in the presence of dynamic application orientation change.</li>
        </ul>
        <h5>native_gamepad</h5>
        <table>
            <col />
            <col style="width: 660px;" />
            <tbody>
                <tr>
                    <td style="background-color: #ffffe0;vertical-align: middle;">
                        <img src="images/notebox.png" />
                    </td>
                    <td style="background-color: #ffffe0;vertical-align: middle;"><b>Note:</b> Game controllers are supported on Honeycomb 3.1 and newer only.  Running this sample on Gingerbread devices will cause the application to display a text warning that the OS does not support game controllers.  This code is specifically designed to show one way of detecting game controller support to allow for it to be optional.
                    </td>
                </tr>
            </tbody>
        </table>
        <p>The native game controller sample shows how to discover (at the Java level) the available game controllers, buttons and axes, and how to handle gamepad buttons and axes in native code.  The NVIDIA support library, <code>nv_input</code> is used to query a non-NDK Android function to add native support for analog joystick axes.</p>
        <p>The application assumes that a USB game controller such as a PS3 SixAxis or Logitech WingMan has been attached to the devkit, tablet or phone.  The Tegra-supported game controllers may be found at <a href="http://www.tegrazone.com/support/game-controller-support" target="_blank">http://www.tegrazone.com/support/game-controller-support</a>.  The sample shows the current values of most axes and buttons visually.  This sample only works on Honeycomb and Ice Cream Sandwich OSes.</p>
        <h5>native_multitouch</h5>
        <p>Native multitouch demonstrates how to track multiple simultaneous touch points in native code.  The code is able to track and display persistent touch indices that show how fingers are tracked over the course of a gesture.  Every touch point includes a crosshair location indicator and a superscripted touch ID number.</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <hr style="height: 1px;" width="100%" size="0" align="center" />
        <script type="text/javascript" src="../../resources/stylesheets/run_prettify.js?lang=vb" autoload="true">
        </script>
        <p>&#160;</p>
        <div class="buttons inline-buttons clearfix topicToolbarProxy topicToolbarProxystyle.css" style="mc-topic-toolbar-items: ;">
            <div class="button-group-container-left">
                <button class="button needs-pie previous-topic-button" type="button" title="Navigate previous">
                    <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="previous topic" />
                </button>
                <div class="button current-topic-index-button disabled"><span class="sequence-index"></span> of <span class="sequence-total"></span></div>
                <button class="button needs-pie next-topic-button" type="button" title="Navigate next">
                    <img src="../../../Skins/Default/Stylesheets/Images/transparent.gif" alt="next topic" />
                </button>
            </div>
        </div>
        <p> </p>
        <p><span style="color: #696969; font-size: 8pt;">NVIDIA&#160;AndroidWorks Documentation Rev. 1.2.150805 ©2015. NVIDIA Corporation. All Rights Reserved.</span>
        </p>
    </body>
</html>