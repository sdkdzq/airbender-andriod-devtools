<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-us" xml:lang="en-us" data-mc-search-type="Stem" data-mc-help-system-file-name="index.xml" data-mc-path-to-help-system="../../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta charset="utf-8" /><title>Broken Backtraces</title>
        <link href="../../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" />
        <link href="../../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" />
        <style>/*&lt;meta /&gt;*/

.needs-pie
{
	behavior: url('../../../../../Resources/Scripts/PIE.htc');
}

</style>
        <link href="../../../../resources/stylesheets/style.css" rel="stylesheet" />
        <script src="../../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../../Resources/Scripts/MadCapAll.js">
        </script>
        <script src="../../../../../Skins/Default/Scripts/GW_TopicToolbar.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink MCWebHelpFramesetLinkTop"><a href="../../../../../index.html#developertools/mobile/system_profiler/3.9-codeworks/10-broken-backtraces.htm">Open topic with navigation</a>
        </p>
        <div class="nocontent">
            <div class="MCBreadcrumbsBox_style.css_0 breadcrumbs" data-mc-breadcrumbs-divider=" &gt; " data-mc-breadcrumbs-count="3" data-mc-toc="True"><span class="MCBreadcrumbsPrefix">You are here: </span>
            </div>
        </div>
        <h1 id="h-e18a7-0"><span class="SystemTitle">Broken Backtraces</span>
        </h1>
        <hr width="100%" size="0" align="center" />
        <madcap:keyword term="Broken backtraces; Compiler flags" xmlns:madcap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" />
        <p>In the symbols table there is a special entry called <em>Broken backtraces</em>. This
entry is used to denote the point in the call chain where the unwinding
algorithms used by Tegra System Profiler could not determine what is the next
(caller) function.</p>
        <p>Broken backtraces happen because there is no information related to the current
function that the unwinding algorithms can use. In the Top-Down view, these
functions are immediate children of the Broken backtraces row.</p>
        <p>One can eliminate broken backtraces by modifying the build system to provide at
least one kind of unwind information. The types of unwind information, used by
the algorithms in Tegra System Profiler, include the following:</p>
        <p>For ARMv7 binaries:</p>
        <ul>
            <li value="1">
                <p>DWARF information in ELF sections: <code>.debug_frame</code>, <code>.zdebug_frame</code>,
<code>.eh_frame</code>, <code>.eh_frame_hdr</code>. This information is the most precise.
<code>.zdebug_frame</code> is a compressed version of <code>.debug_frame</code>, so at most one of
them is typically present. <code>.eh_frame_hdr</code> is a companion section for
<code>.eh_frame</code> and might be absent.</p>
                <p>Compiler flag: <code>-g</code>.</p>
            </li>
            <li value="2">
                <p>Exception handling information in EHABI format provided in <code>.ARM.exidx</code> and
<code>.ARM.extab</code> ELF sections. <code>.ARM.extab</code> might be absent if all information
is compact enough to be encoded into <code>.ARM.exidx</code>.</p>
                <p>Compiler flag: <code>-funwind-tables</code>.</p>
            </li>
            <li value="3">
                <p>Frame pointers (built into the <code>.text</code> section).</p>
                <p>Compiler flag: <code>-fno-omit-frame-pointer</code>.</p>
            </li>
        </ul>
        <p>For Aarch64 binaries:</p>
        <ul>
            <li value="1">
                <p>DWARF information in ELF sections: <code>.debug_frame</code>, <code>.zdebug_frame</code>,
<code>.eh_frame</code>, <code>.eh_frame_hdr</code>. See additional comments above.</p>
                <p>Compiler flag: <code>-g</code>.</p>
            </li>
            <li value="2">
                <p>Frame pointers (built into the <code>.text</code> section).</p>
                <p>Compiler flag: <code>-fno-omit-frame-pointer</code>.</p>
            </li>
        </ul>
        <p>The following ELF sections should be considered empty if they have size of 4
bytes: <code>.debug_frame</code>, <code>.eh_frame</code>, <code>.ARM.exidx</code>. In this case, these sections
only contain termination records and no useful information.</p>
        <p>For GCC, use the following compiler invocation to see which compiler flags are
enabled in your toolchain by default (for example, to check if <code>-funwind-tables</code>
is enabled by default):</p>
        <blockquote><pre class="prettyprint">$ gcc -Q --help=common
</pre>
        </blockquote>
        <p>For GCC and Clang, add <code>-###</code> to the compiler invocation command to see which
compiler flags are actually being used.</p>
        <p>Since EHABI and DWARF information is compiled on per-unit basis (every <code>.cpp</code> or
<code>.c</code> file, as well as every static library, can be built with or without this
information), presence of the ELF sections does not guarantee that every
function has necessary unwind information.</p>
        <p>Frame pointers are required by the Aarch64 Procedure Call Standard. Adding frame
pointers slows down execution time, but in most cases the difference is
negligible.</p>
        <hr style="height: 1px;" width="100%" size="0" align="center" />
        <script type="text/javascript" src="../../../../resources/prettify/run_prettify.js">
        </script>
        <p>&#160;</p>
        <div class="buttons popup-container clearfix topicToolbarProxy topicToolbarProxystyle.css _Skins_GW_TopicToolbar mc-component nocontent" style="mc-topic-toolbar-items: ;">
        </div>
        <p> <![CDATA[ ]]></p>
        <img src="../../../../resources/prettify/onload.png" onload="prettyprint()" />
        <p><span style="color: #696969; font-size: 8pt;">NVIDIA® System Profiler Documentation Rev. 3.9.180207 ©<span class="MyVariablesCopyrightCurrentYear">2018</span>. NVIDIA Corporation. All Rights Reserved.</span>
        </p>
    </body>
</html>